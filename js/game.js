
var container;
var camera, scene, raycaster, renderer;

var mouse = new THREE.Vector2(), INTERSECTED;
var radius = 500, theta = 0;
var frustumSize = 1000;

var waspN = 4;
var speed = 20;
var shipAcceleration = 0;
var bullets = [];
var bulletN = 0;
var explodeAWasp = [];
var lives = 3;
var score = 0;
var thisName = "";

var highScores = [];

var shipX = 0;
var shipY = 0;

var requestId;

var shipPixels = [];
var explode = 1;
shipPixels.push([[[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[47, 221, 150], [2, 217, 129], [255, 255, 255], [255, 255, 255], [164, 126, 136], [185, 39, 81], [197, 38, 83], [194, 27, 75], [185, 33, 77], [238, 222, 226], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]]]) ;
shipPixels.push
shipPixels.push
shipPixels.push([[[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[245, 253, 249], [251, 254, 253], [245, 253, 249], [249, 254, 252], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[124, 233, 189], [47, 240, 158], [29, 253, 157], [0, 255, 145], [0, 213, 126], [176, 203, 191], [215, 215, 215], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[99, 229, 176], [0, 242, 139], [0, 255, 145], [0, 253, 144], [0, 213, 126], [134, 161, 150], [153, 153, 153], [153, 153, 153], [122, 122, 122], [44, 44, 44], [73, 73, 73], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[72, 225, 162], [0, 245, 141], [0, 241, 139], [0, 223, 130], [10, 209, 128], [139, 158, 150], [165, 106, 123], [162, 118, 131], [153, 152, 153], [133, 133, 133], [74, 74, 74], [88, 88, 88], [91, 91, 91], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[47, 221, 150], [0, 217, 128], [32, 211, 138], [95, 176, 143], [158, 118, 129], [184, 36, 78], [190, 13, 64], [190, 13, 64], [185, 33, 77], [170, 88, 112], [156, 141, 145], [147, 147, 147], [120, 120, 120], [191, 191, 191], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [137, 235, 195], [236, 239, 238], [203, 203, 203], [160, 154, 156], [175, 68, 99], [190, 13, 64], [188, 19, 68], [178, 71, 102], [169, 114, 130], [165, 138, 145], [174, 174, 174], [155, 155, 155], [150, 150, 150], [196, 196, 196], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [245, 245, 245], [170, 170, 170], [165, 109, 125], [161, 147, 152], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [212, 212, 212], [171, 171, 171], [238, 238, 238], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [247, 247, 247], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]]]);
shipPixels.push


waspPixels = [];
waspPixels.push
waspPixels.push
waspPixels.push
waspPixels.push
waspPixels.push

var shipSize = spriteSizer(shipPixels);
var waspSize = spriteSizer(waspPixels);
console.log(waspSize);

//console.log(shipSize);
//keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };



var explode = false;
var explodeCounter = 0;

var thisLifeCounter = 0;
//controls();

expArray = exploderArray();

document.addEventListener("DOMContentLoaded", function(event) {
	start();
})


function start(){




	var startButton = document.getElementsByClassName('startButton')[0];
	console.log(startButton);
	startButton.addEventListener("click", function(){
		document.onkeydown = null;
		this.setAttribute('style','display:none');

		var hi = document.getElementsByClassName('hi')[0];
		hi.setAttribute('style','display:none');

		var enterName = document.getElementsByClassName('enterName')[0];
		enterName.setAttribute('style','display:inline');
		startTheGame();

	}, false);
}

function startTheGame(){



	var go = document.getElementsByClassName('go')[0];
	go.removeEventListener("click", function(){}, false);
	go.addEventListener("click", function(){

		thisName = document.getElementsByClassName('nameInput')[0].value
		highScores.push({
				name: thisName
			, score: 0
		});
		document.getElementsByClassName('nameInput')[0].value = '';
		console.log(highScores)

		var startPage = document.getElementsByClassName('start')[0];
		startPage.setAttribute('style','display:none');

		var enterName = document.getElementsByClassName('enterName')[0];
		enterName.setAttribute('style','display:none');

		init();
		animate();
	}, false);

}



function init() {

	var thisLives = document.getElementsByClassName('lifeNow')[0];
	thisLives.innerHTML = lives;

	container = document.createElement( 'div' );
	container.className = 'game';
	document.body.appendChild( container );

	
	var aspect = window.innerWidth / window.innerHeight;
	camera = new THREE.OrthographicCamera( frustumSize * aspect / - 2, frustumSize * aspect / 2, frustumSize / 2, frustumSize / - 2, 1, 1000 );

	scene = new THREE.Scene();

	// var light = new THREE.DirectionalLight( 0xffffff, 1 );
	// light.position.set( 2, 2, 2 ).normalize();
	// scene.add( light );

				var ambientLight = new THREE.AmbientLight( 0xaaaaaa );
				scene.add( ambientLight );

				var directionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );
				directionalLight.position.x = 0;
				directionalLight.position.y = 0;
				directionalLight.position.z = -8;
				directionalLight.position.normalize();
				scene.add( directionalLight );

				// var directionalLight = new THREE.DirectionalLight( Math.random() * 0xffffff );
				// directionalLight.position.x = Math.random() - 0.5;
				// directionalLight.position.y = Math.random() - 0.5;
				// directionalLight.position.z = Math.random() - 0.5;
				// directionalLight.position.normalize();
				// scene.add( directionalLight );



	renderer = new THREE.WebGLRenderer();
	renderer.setClearColor( 0x000000 );
	renderer.setPixelRatio( window.devicePixelRatio );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.sortObjects = false;
	container.appendChild(renderer.domElement);

	ship(1);

	for ( i = 0 ; i < waspN ; i++ ){
		wasp(i);
	}
	
	//

	window.addEventListener( 'resize', onWindowResize, false );

	// window.addEventListener( 'click', function(){
	// 	explode = true;
	// }, false);

	document.addEventListener("keydown", keyEvent, false);

	

	console.log("rotation x "+camera.rotation.x);
	console.log("rotation y "+camera.rotation.z);
	console.log("zoom "+camera.zoom);
	console.log("pos x "+camera.position.x);
	// document.addEventListener('keydown',onDocumentKeyDown,false);
	// function onDocumentKeyDown(event){
	// 	var delta = 200;
	// 	event = event || window.event;
	// 	var keycode = event.keyCode;
	// 	switch(keycode){
	// 	case 37 : //left arrow 

	// 	break;
	// 	case 38 : // up arrow
	// 		console.log('up');  
	// 		moveShip('up');
	// 	break;
	// 	case 39 : // right arrow 

	// 	break;
	// 	case 40 : //down arrow

	// 	break;
	// }
	// 	document.addEventListener('keyup',onDocumentKeyUp,false);
	// }
	// function onDocumentKeyUp(event){
	// 	document.removeEventListener('keydown',onDocumentKeyDown,false);
	// }

}

function onWindowResize() {

	var aspect = window.innerWidth / window.innerHeight;

	camera.left   = - frustumSize * aspect / 2;
	camera.right  =   frustumSize * aspect / 2;
	camera.top    =   frustumSize / 2;
	camera.bottom = - frustumSize / 2;

	camera.updateProjectionMatrix();

	renderer.setSize( window.innerWidth, window.innerHeight );

}


//

function animate() {

	requestId = requestAnimationFrame( animate );

	render();

}

function render() {

	thisLifeCounter++;
	
	//console.log(theta);
	
	//If an explosion has been triggered
	if(explode === true){
		explodeCounter++;
		if(explodeCounter < 25){
			preExploder();
		}
		if(explodeCounter >25 & explodeCounter < 100){
			exploder();
		}
		if(explodeCounter > 100){
			postExploder();
			explode = false;
			explodeCounter = 0;
		}
	}else{ //fly in with new life
		if(thisLifeCounter < 25){
			camera.position.x = camera.position.x-10;
			//jitter(1, 'ship', '');
		}else{ //Normal activity
			//jitter(2, 'ship', '');
			bulletUpdate();
			updateShip();
		};		
	}

	//Explode a wasp
	if (explodeAWasp.length > 0){

		if( explodeAWasp[1] === 1 ){

			var rando = Math.floor(Math.random() * (4 - 1) + 1);
			//console.log('slider');
			console.log(rando);
			if(rando < 3 ){
				var slider = document.getElementsByClassName('slider')[0];
				//console.log(slider);
				slider.className = 'slider quipTime'
				var dag = slider.getElementsByClassName('dag')[0];
				var quip = slider.getElementsByClassName('quip')[0];
				
				
				console.log(dag);
				if(rando === 1){
					dag.setAttribute('style', "background-image:url('./images/bug-off.gif')");
					quip.innerHTML = "Why don't you just bug off!";
				}
				if(rando === 2){
					dag.setAttribute('style', "background-image:url('./images/cider-in-the-park.gif')");
					quip.innerHTML = "This is for all those times I've tried to drink cider in the park!";
				}

				setTimeout(function(){
					dag.setAttribute('style', "");
					slider.className = 'slider';
					quip.innerHTML = ("");

				}, 1900);				
			}

		}


		explodeAWasp[1]++;
		waspExploder(explodeAWasp[0]);
		if(explodeAWasp[1]>20){
			wasp(explodeAWasp[0]);
			explodeAWasp = [];
		}
	}

	//wasps vibrate
	// for ( var l = 0 ; l < waspN ; l++ ){
	// 	waspJitter(4, l);
	// }	

	//wasps move
	if(thisLifeCounter > 50){
		waspsMove(speed*2);		
	}
	if(thisLifeCounter < 50){
		waspsMove(speed*2);		
	}


	waspCheckEnd();
	waspCheckDistance();


	renderer.render( scene, camera );

}

function updateShip(){

		var ship = scene.getObjectByName( "ship2-10" );
		shipY = ship.position.y;
		if(ship.position.y > 400 ){
			shipAcceleration-=4;
		}
		if(ship.position.y < -400){
			shipAcceleration+=4;
		}
		//shipAcceleration = 0;
	for ( k = 0 ; k < 5 ; k++ ){
		for( i = 0 ; i < shipSize[k] ; i++ ){

			var object = scene.getObjectByName( "ship"+k+"-"+i );

			object.position.y += shipAcceleration;
		}		
	}
}

function moveShip(direction){

	var ship = scene.getObjectByName( "ship2-10" );
	//console.log(ship.position.y);
	if(ship.position.y < 200 & ship.position.y > -200 ){
		if( direction === 'up'){
			shipAcceleration+=4;
			if(shipAcceleration>32){
				shipAcceleration = 32
			}
		}else{
			shipAcceleration-=4;
			if(shipAcceleration< -32){
				shipAcceleration = -32
			}

		}		
	}



}

function waspsMove(speed){
	for ( var l = 0 ; l < waspN ; l++ ){
		for ( k = 0 ; k < 5 ; k++ ){
			for( i = 0 ; i < waspSize[k] ; i++ ){
				var object = scene.getObjectByName( "wasp"+l+"-"+k+"-"+i );

				object.position.x -= speed;
			}		
		}		
	}		
}

function waspCheckEnd(){
	for ( var l = 0 ; l < waspN ; l++ ){
		var object = scene.getObjectByName( "wasp"+l+"-2-10" );
		if (object.position.x < -1000 ){
			removeWasp(l);
		}
	}
};

function waspCheckDistance(){
	var ship = scene.getObjectByName( "ship2-10" );
	for ( var l = 0 ; l < waspN ; l++ ){
		var thisWasp = scene.getObjectByName( "wasp"+l+"-2-10" );


		var dx = thisWasp.position.x - ship.position.x;
		var dy = thisWasp.position.y - ship.position.y;
		var distance = Math.sqrt((dx*dx) + (dy*dy));
		//console.log(distance);
		if (distance < 30){
			if(explode === false){
				updateLives();
			}
			explode = true;
			
			if(lives === 0){

			}
		}

	}	
}

function waspJitter(intensity, n){
	var dx = Math.random()*intensity-(intensity/2);
	var dy = Math.random()*intensity-(intensity/2);

	for ( k = 0 ; k < 5 ; k++ ){
		for( i = 0 ; i < waspSize[k] ; i++ ){
			var object = scene.getObjectByName( "wasp"+n+"-"+k+"-"+i );

			object.position.x += dx;
			object.position.y += dy;
		}		
	}
}

function jitter(intensity){

	var dx = Math.random()*intensity-(intensity/2);
	var dy = Math.random()*intensity-(intensity/2);

	for ( k = 0 ; k < 5 ; k++ ){
		for( i = 0 ; i < shipSize[k] ; i++ ){

			var object = scene.getObjectByName( "ship"+k+"-"+i );

			object.position.x += dx;
			object.position.y += dy;
		}		
	}


}




function preExploder(){
	//console.log(camera.position.x);
	if(camera.position.x > -750){
		camera.position.x -= 40;

	}else{
		// camera.rotation.y += .05;
		camera.rotation.x -= .05;
		camera.rotation.z -= .05;
		camera.zoom += .07;
		camera.updateProjectionMatrix();
	}
	//camera.position.z -=.5
	
	//
	//
	//var object = scene.getObjectByName( "ship128" );
	//camera.lookAt( object );
  

}

function exploder(){

	removeBullets();

	for ( k = 0 ; k < 5 ; k++ ){
		for( i = 0 ; i < shipSize[k] ; i++ ){


			var object = scene.getObjectByName( "ship"+k+'-'+i );
			//console.log(expArray);
			object.position.x += expArray[k][i].dx;
			object.position.y += expArray[k][i].dy;
			object.position.z += expArray[k][i].dz;
			object.rotation.x += expArray[k][i].dRot;
			object.rotation.y += expArray[k][i].dRot;
			object.scale.x += .01;
			object.scale.y += .01;
			object.scale.z += .01;

		}		
	}

}

function postExploder(){
	for ( var l = 0 ; l < waspN ; l++ ){
		removeWasp(l);
	}
	removeShip();
	
	camera.rotation.x = 0;
	camera.rotation.z = 0;
	camera.zoom = 1;
	camera.position.x = -250;
	camera.updateProjectionMatrix();
	shipAcceleration = 0;

	ship();


}

function exploderArray(){
	var exploderArray=[];
	var speed = 5;
	var rotation = Math.PI/30;

	for (k = 0; k < 5 ; k++){
		var thisExploderArray = [];
		for (i = 0; i < 256 ; i++){
			var dx = Math.random()*speed-(speed/2);
			var dy = Math.random()*speed-(speed/2);
			var dz = Math.random()*speed*-1;
			var dRot = Math.random()*rotation;
			thisExploderArray.push({
					dx : dx
				, dy : dy
				, dz : dz
				, dRot : dRot
			});
		}
		exploderArray.push(thisExploderArray);		
	}

	return exploderArray;
}




function componentToHex(c) {
    var hex = c.toString(16);
    return hex.length == 1 ? "0" + hex : hex;
}

function rgbToHex(rgb) {
    return "#" + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);
}

//DRAW SPRITES

function ship(a){
	var geometry = new THREE.BoxGeometry( 4, 4, 4 );
	var shipSprite = [];
	var posX = -800;
	var posY = 0;

	for (var k = 0 ; k < 5 ; k++ ){
		var counter = 0;
		for ( var j = 0 ; j < 16 ; j++){
			for ( var i = 0; i < 16; i ++ ) {

				var color = rgbToHex(shipPixels[k][j][i]);
				//console.log(color);
				if (color === '#ffffff'){
					var opacity = 0;
				}else{
					var opacity = 1;
						var object = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( {
				    color: color,
				    opacity:opacity,
				    overdraw:0.5,
				    transparent: true
				  })
					);

					object.position.x = posX + i*4;
					object.position.y = posY + j*-4;
					object.position.z = -20 - k * 4;

					object.name = "ship"+k+"-"+counter++;

					shipSprite.push(object);
				}


			}
		}

			for ( i = 0 ; i < shipSprite.length ; i++ ){
			scene.add( shipSprite[i] );		
			}		
	}
}

function wasp(n){
	var geometry = new THREE.BoxGeometry( 4, 4, 4 );
	var waspSprite = [];
	var posX = n * 100 + 1000;
	var posY = Math.random()*1000 - 500;	

	for (var k = 0 ; k < 5 ; k++ ){
		var counter = 0;
		for ( var j = 0 ; j < 16 ; j++){
			for ( var i = 0; i < 16; i ++ ) {

				var color = rgbToHex(waspPixels[k][j][i]);
				//console.log(color);
				if (color === '#ffffff'){
					var opacity = 0;
				}else{
					var opacity = 1;
						var object = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( {
				    color: color,
				    opacity:opacity,
				    overdraw:0.5,
				    transparent: true
				  })
					);

					object.position.x = posX + i*4;
					object.position.y = posY + j*-4;
					object.position.z = -20 - k * 4;

					object.name = "wasp"+n+"-"+k+"-"+counter++;

					waspSprite.push(object);
				}


			}
		}

			for ( i = 0 ; i < waspSprite.length ; i++ ){
			scene.add( waspSprite[i] );		
			}		
	}
}

function removeWasp(n){
		for ( k = 0 ; k < 5 ; k++ ){
		for( i = 0 ; i < waspSize[k] ; i++ ){
			var object = scene.getObjectByName( "wasp"+n+"-"+k+"-"+i );

			scene.remove(object);
		}		
	}
	wasp(n);
}

function removeShip(){
	for ( k = 0 ; k < 5 ; k++ ){
		for( i = 0 ; i < shipSize[k] ; i++ ){

			var object = scene.getObjectByName( "ship"+k+"-"+i );

			scene.remove(object);
		}		
	}
}

//return array of pixel sizes for each layer
function spriteSizer(pixels){
	countArray = [];

	for ( k = 0 ; k < 5 ; k++ ){
		//console.log(k);
		//console.log(shipPixels[k]);
		var counter = 0;
		for ( var j = 0 ; j < 16 ; j++){
			for ( var i = 0; i < 16; i ++ ) {

				var color = rgbToHex(pixels[k][j][i]);
				//console.log(color);
				if (color === '#ffffff'){
				}else{
					counter++;
				}
			}
		}
		countArray.push(counter);
	}

	return countArray;
}

function bulletUpdate(){
	var removeBullets = [];
	
	//only do this if there are bullets
	if(bullets.length > 0){
		
		//move bullets, remove them once they are off screen
		for ( i = 0 ; i < bullets.length ; i++ ){
			//console.log(bullets[i]);
			var object = scene.getObjectByName( bullets[i] );
			object.position.x += 30;

			if( object.position.x > 400){
				removeBullets.push(removeBullet(bullets[i]));
			}

			//check if hit wasp
			
			for ( var l = 0 ; l < waspN ; l++ ){
				var thisWasp = scene.getObjectByName( "wasp"+l+"-2-10" );


				var dx = thisWasp.position.x - object.position.x;
				var dy = thisWasp.position.y - object.position.y;
				var distance = Math.sqrt((dx*dx) + (dy*dy));
				//console.log(distance);
				if (distance < 30){
					console.log( "Explode wasp: wasp"+l);

					updateScore(1000);
					explodeAWasp = [l,0];
				}

			}	
		}


	}

}

function waspExploder(l){
	
	for ( k = 0 ; k < 5 ; k++ ){
		for( i = 0 ; i < waspSize[k] ; i++ ){


			var object = scene.getObjectByName( "wasp"+l+"-"+k+'-'+i );
			//console.log(expArray);
			object.position.x += expArray[k][i].dx*2;
			object.position.y += expArray[k][i].dy*2;
			object.position.z += expArray[k][i].dz*2;
			object.rotation.x += expArray[k][i].dRot;
			object.rotation.y += expArray[k][i].dRot;
			object.scale.x += .01;
			object.scale.y += .01;
			object.scale.z += .01;
			object.opacity -=.02;

		}		
	}

}

function fire(){
	bullet();
}

function bullet(){
	//console.log('bullet');
	var geometry = new THREE.SphereGeometry(7, 16, 16, 0, 3, 4, Math.PI * 2);
	var material = new THREE.MeshNormalMaterial();
	var sphere = new THREE.Mesh(geometry, material);

	sphere.position.x = -750;
	sphere.position.y = shipY;
	sphere.position.z = 0;
	sphere.name = "bullet"+bulletN;
	bullets.push("bullet"+bulletN);
	//console.log(bullets);
	//console.log(sphere.name);
	scene.add( sphere );
	bulletN++;
}

function removeBullet(i){
		var object = scene.getObjectByName( i );
		scene.remove(object);	

		var index = bullets.indexOf(i);
		bullets.splice(index, 1);
}

function removeBullets(){
	for ( i in bullets ){
		var object = scene.getObjectByName( bullets[i] );
		scene.remove(object);
	}
	bullets = [];
}

function updateScore(add){
	score+=add;
	var thisScore = document.getElementsByClassName('scoreNow')[0];
	thisScore.innerHTML = score;
	highScores[highScores.length-1].score+=add;
}

function updateLives(){
	console.log("LIVES: "+explode);
	lives-=1;
	if (lives < 1){
		console.log("game over");
		var gameOver = document.getElementsByClassName('game-over')[0];
		console.log(gameOver);
		gameOver.setAttribute('style','display:inline');
		setTimeout(function(){

				document.removeEventListener("keydown", keyEvent, false);
				var startPage = document.getElementsByClassName('start')[0];
				startPage.setAttribute('style','display:inline');

				var startButton = document.getElementsByClassName('startButton')[0];
				startButton.setAttribute('style','display:inline');

				var hi = document.getElementsByClassName('hi')[0];
				hi.setAttribute('style','display:inline');


				var thisGame = document.getElementsByClassName('game');
				console.log(thisGame);
				for( i = 0 ; i < thisGame.length ; i++){
					thisGame[i].remove();
					thisGame[i].setAttribute('style','display:none');
					removeElement(thisGame[i]);					
				}

				gameOver.setAttribute('style','display:none');
				var thisScore = document.getElementsByClassName('scoreNow')[0];
				thisScore.innerHTML = 0;
				lives = 3;
				updateHighScores();

				if (requestId) {
       		window.cancelAnimationFrame(requestId);
       		requestId = undefined;
    		}
		}, 3000);	


	}else{
		var thisLife = document.getElementsByClassName('lifeNow')[0];
		thisLife.innerHTML = lives;		
	}

}

Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
}
NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
}

function removeElement(element) {
    element && element.parentNode && element.parentNode.removeChild(element);
}

function keyEvent(e){
		e.preventDefault();
		if (e.keyCode === 32 && e.target === document.body) {
    	e.preventDefault();
    	fire();
  	}
		var key = e.keyCode;
		//console.log(key);
		if(key === 38){
			moveShip('up');
		}
		if(key === 40){
			moveShip('down');
		}
		if (key === 17){
			//alert('fire');
			fire();
		}
	}

function updateHighScores(){
	theseHigh = highScores;
  theseHigh.sort(function(a, b) {
    return parseInt(b.score) - parseInt(a.score);
  });

  for ( i = 0 ; i < theseHigh.length ; i++ ){
  	thisOne = document.getElementsByClassName('hiContainer')[0].cloneNode(true);
  	console.log(thisOne);
  	thisOne.getElementsByClassName('name')[0].innerHTML = theseHigh[i].name;
  	thisOne.getElementsByClassName('hiscore')[0].innerHTML = theseHigh[i].score;

  	var reference = document.getElementsByClassName('hiContainer')[0];
  	var parent = document.getElementsByClassName('hi')[0];
  	reference.parentNode.insertBefore(thisOne, reference);

  }
  console.log(theseHigh);
}

